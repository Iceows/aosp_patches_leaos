From 6a5a50a19ccddb18e309c2bb60e80223e0bb86a0 Mon Sep 17 00:00:00 2001
From: Raphael Mounier <mounierr07@gmail.com>
Date: Thu, 5 Jan 2023 13:40:34 +0100
Subject: [PATCH] Add persist.sys.phh.disable_a2dp_offload property to force
 a2dp offload

03/01/2023 : Update for 13r19
11/12/2022 : Add android 13r16 persist.bluetooth.a2dp_offload.disabled and persist.sys.phh.disable_a2dp_offload properties
---
 system/btif/src/btif_av.cc             | 11 ++++++++++-
 system/stack/a2dp/a2dp_codec_config.cc | 22 +++++++++++++++++++++-
 2 files changed, 31 insertions(+), 2 deletions(-)

diff --git a/system/btif/src/btif_av.cc b/system/btif/src/btif_av.cc
index 7f613b87ad..71c0378663 100644
--- a/system/btif/src/btif_av.cc
+++ b/system/btif/src/btif_av.cc
@@ -997,9 +997,18 @@ bt_status_t BtifAvSource::Init(
   osi_property_get("ro.bluetooth.a2dp_offload.supported", value_sup, "false");
   osi_property_get("persist.bluetooth.a2dp_offload.disabled", value_dis,
                    "false");
+
+  char value_phh[PROPERTY_VALUE_MAX] = {'\0'};
+  osi_property_get("persist.sys.phh.disable_a2dp_offload", value_phh, "false");
+
   a2dp_offload_enabled_ =
       (strcmp(value_sup, "true") == 0) && (strcmp(value_dis, "false") == 0);
-  BTIF_TRACE_DEBUG("a2dp_offload.enable = %d", a2dp_offload_enabled_);
+
+  if(strcmp(value_phh, "true") == 0)
+      a2dp_offload_enabled_ = false;
+
+  LOG_ERROR("a2dp_offload.enable = %s", a2dp_offload_enabled_ ? "on" : "off");
+
 
   callbacks_ = callbacks;
   if (a2dp_offload_enabled_) {
diff --git a/system/stack/a2dp/a2dp_codec_config.cc b/system/stack/a2dp/a2dp_codec_config.cc
index 27a42f9106..95dd81e541 100644
--- a/system/stack/a2dp/a2dp_codec_config.cc
+++ b/system/stack/a2dp/a2dp_codec_config.cc
@@ -41,6 +41,10 @@
 #include "osi/include/properties.h"
 #include "stack/include/bt_hdr.h"
 
+
+/* A2DP Offload enabled in stack */
+static bool a2dp_offload_status;
+
 /* The Media Type offset within the codec info byte array */
 #define A2DP_MEDIA_TYPE_OFFSET 1
 
@@ -561,6 +565,22 @@ bool A2dpCodecs::init() {
 
   bool opus_enabled =
       osi_property_get_bool("persist.bluetooth.opus.enabled", false);
+      
+  char value_phh[PROPERTY_VALUE_MAX];
+  char value_sup[PROPERTY_VALUE_MAX], value_dis[PROPERTY_VALUE_MAX];
+
+  osi_property_get("ro.bluetooth.a2dp_offload.supported", value_sup, "false");
+  osi_property_get("persist.bluetooth.a2dp_offload.disabled", value_dis,
+                   "false");
+  a2dp_offload_status =
+      (strcmp(value_sup, "true") == 0) && (strcmp(value_dis, "false") == 0);
+      
+  osi_property_get("persist.sys.phh.disable_a2dp_offload", value_phh, "false");
+
+  if(strcmp(value_phh, "true") == 0)
+      a2dp_offload_status = false;
+
+  LOG_ERROR("Got a2dp offload status %s", a2dp_offload_status ? "on" : "off");
 
   for (int i = BTAV_A2DP_CODEC_INDEX_MIN; i < BTAV_A2DP_CODEC_INDEX_MAX; i++) {
     btav_a2dp_codec_index_t codec_index =
@@ -623,7 +643,7 @@ bool A2dpCodecs::init() {
     }
   }
 
-  return (!ordered_source_codecs_.empty() && !ordered_sink_codecs_.empty());
+  return (!ordered_source_codecs_.empty() && !ordered_sink_codecs_.empty()) && !a2dp_offload_status;
 }
 
 A2dpCodecConfig* A2dpCodecs::findSourceCodecConfig(
-- 
2.25.1

