From 62363e901e7e0813216e5dc124161ef3027ad49d Mon Sep 17 00:00:00 2001
From: Zim <zezeozue@google.com>
Date: Thu, 5 Aug 2021 15:29:02 +0100
Subject: [PATCH] Fix use-after-free bug in FuseDaemon

The FuseDaemon periodically runs fadvise on the lower file system to
avoid double caching. As part of 'recording' the write for the fadvise
queue we sometimes raced and had the following ordering of events:

T1: fuse_reply_write
T2: pf_release (destroy handle)
T1: Record (using already destroyed handle)

Now we, call Record before fuse_reply_write

Test: Manual
Bug: 192085766
Bug: 195615818
Change-Id: Iba7598d40aa03d082af10935552ac7db7e28c5b6
(cherry picked from commit f38de0b09885b8766de2b351d90cc86ce7d9240c)
(cherry picked from commit 9b7488a6ab3f4c8f5cfc30ff7d04a972643c1ff9)
---
 jni/FuseDaemon.cpp | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/jni/FuseDaemon.cpp b/jni/FuseDaemon.cpp
index ecb7092e..52ac5f79 100644
--- a/jni/FuseDaemon.cpp
+++ b/jni/FuseDaemon.cpp
@@ -1189,8 +1189,10 @@ static void pf_write_buf(fuse_req_t req,
     if (size < 0)
         fuse_reply_err(req, -size);
     else {
-        fuse_reply_write(req, size);
+        // Execute Record *before* fuse_reply_write to avoid the following ordering:
+        // fuse_reply_write -> pf_release (destroy handle) -> Record (use handle after free)
         fuse->fadviser.Record(h->fd, size);
+        fuse_reply_write(req, size);
     }
 }
 // Haven't tested this one. Not sure what calls it.
-- 
2.25.1

