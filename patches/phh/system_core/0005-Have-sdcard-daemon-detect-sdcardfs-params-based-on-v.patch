From 37b56f11b1e270c0005b3a764a72114e122d12c4 Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Fri, 1 Nov 2019 18:22:13 +0100
Subject: [PATCH 05/12] Have sdcard daemon detect sdcardfs params based on vndk
 version

Change-Id: Id374e781957927d5604cb96c7a39b3fb28b3a6c5
---
 sdcard/sdcard.cpp | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/sdcard/sdcard.cpp b/sdcard/sdcard.cpp
index 955ddbb4c..e580190e9 100644
--- a/sdcard/sdcard.cpp
+++ b/sdcard/sdcard.cpp
@@ -32,6 +32,7 @@
 #include <android-base/file.h>
 #include <android-base/logging.h>
 #include <android-base/macros.h>
+#include <android-base/properties.h>
 #include <android-base/stringprintf.h>
 #include <android-base/strings.h>
 
@@ -103,15 +104,15 @@ static bool sdcardfs_setup(const std::string& source_path, const std::string& de
                            mode_t mask, bool derive_gid, bool default_normal, bool unshared_obb,
                            bool use_esdfs) {
     // Add new options at the end of the vector.
+    int vndk = android::base::GetIntProperty<int>("ro.vndk.version", 29);
     std::vector<std::string> new_opts_list;
     if (multi_user) new_opts_list.push_back("multiuser,");
-    if (derive_gid) new_opts_list.push_back("derive_gid,");
-    if (default_normal) new_opts_list.push_back("default_normal,");
-    if (unshared_obb) new_opts_list.push_back("unshared_obb,");
+    if (derive_gid && vndk >= 27) new_opts_list.push_back("derive_gid,");
+    if (default_normal && vndk >= 28) new_opts_list.push_back("default_normal,");
+    if (unshared_obb && vndk >= 29) new_opts_list.push_back("unshared_obb,");
     // Try several attempts, each time with one less option, to gracefully
     // handle older kernels that aren't updated yet.
-    int first_option_to_try = property_get_bool("persist.sys.phh.modern_sdcard", false) ? 0 : 2;
-    for (int i = first_option_to_try; i <= new_opts_list.size(); ++i) {
+    for (int i = 0; i <= new_opts_list.size(); ++i) {
         std::string new_opts;
         for (int j = 0; j < new_opts_list.size() - i; ++j) {
             new_opts += new_opts_list[j];
-- 
2.25.1

